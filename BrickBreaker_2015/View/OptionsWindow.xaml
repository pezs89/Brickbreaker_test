<Window x:Class="BrickBreaker_2015.View.OptionsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:BrickBreaker_2015.View"
        mc:Ignorable="d"
        Title="OptionsWindow" x:Name="OptionsWindowBinding"  ResizeMode="NoResize" WindowStartupLocation="CenterScreen" Icon="/Resources/Concrete_wall.jpg">
    <Window.Background>
        <ImageBrush ImageSource="/Resources/Concrete_wall.jpg"></ImageBrush>
    </Window.Background>

    <Window.Resources>

        <Style x:Key="CustomButtonStyle" TargetType="Button">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="FontFamily" Value="Arial"/>
            <Setter Property="FontSize" Value="20px"/>
            <Setter Property="FontWeight" Value="Thin"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border" 
        				BorderThickness="0">
                            <Grid >
                                <ContentPresenter HorizontalAlignment="Center" 
                                    VerticalAlignment="Center" Name="content"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="#FF05055F" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="content" Property="RenderTransform" >
                                    <Setter.Value>
                                        <TranslateTransform Y="2.0" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="TextBoxTemplate" TargetType="TextBox">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="BorderThickness" Value="1px"/>
            <Setter Property="FontWeight" Value="Thin"/>
            <Setter Property="FontFamily" Value="Arial"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Margin" Value="5px"/>
        </Style>

        <Style x:Key="LabelTemplate" TargetType="Label">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="FontWeight" Value="Thin"/>
            <Setter Property="FontFamily" Value="Arial"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <Style x:Key="CheckboxTemplate" TargetType="CheckBox">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="FontWeight" Value="Thin"/>
            <Setter Property="FontFamily" Value="Arial"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Margin" Value="5px"/>
        </Style>

        <SolidColorBrush x:Key="ComboBoxNormalBorderBrush" Color="Transparent" />
        <SolidColorBrush x:Key="ComboBoxNormalBackgroundBrush" Color="Transparent" />
        <SolidColorBrush x:Key="ComboBoxDisabledForegroundBrush" Color="Blue" />
        <SolidColorBrush x:Key="ComboBoxDisabledBackgroundBrush" Color="BlueViolet" />
        <SolidColorBrush x:Key="ComboBoxDisabledBorderBrush" Color="LightBlue" />

        <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="8*"/>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <Border Grid.ColumnSpan="2" Name="Border"
                     BorderBrush="Black" 
                     CornerRadius="0" BorderThickness="1, 1, 1, 1" 
                     Background="{StaticResource ComboBoxNormalBackgroundBrush}" />
                <Border Grid.Column="1" Margin="1, 1, 1, 1" BorderBrush="#444" Name="ButtonBorder"
                     CornerRadius="0, 0, 0, 0" BorderThickness="0, 0, 0, 0" 
                     Background="{StaticResource ComboBoxNormalBackgroundBrush}" />

                <Path Name="Arrow" Grid.Column="1" 
                      Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                      HorizontalAlignment="Center" Fill="White"
                      VerticalAlignment="Center" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="UIElement.IsMouseOver" Value="True">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="Transparent"/>
                    <Setter Property="Shape.Fill" TargetName="Arrow" Value="White"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="Transparent"/>
                    <Setter Property="Shape.Fill" TargetName="Arrow" Value="White"/>
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="False">
                    <Setter Property="Panel.Background" TargetName="Border" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                    <Setter Property="Border.BorderBrush" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBorderBrush}"/>
                    <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                    <Setter Property="Shape.Fill" TargetName="Arrow" Value="#999"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="ComboBoxFlatStyle"  TargetType="{x:Type ComboBox}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="TextElement.Foreground" Value="#FF2FADFB"/>
            <Setter Property="Margin" Value="5px"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Name="ToggleButton" Grid.Column="2"
                                ClickMode="Press" Focusable="False"
                                IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                Template="{StaticResource ComboBoxToggleButtonTemplate}"/>
                            <ContentPresenter Name="ContentSite"  IsHitTestVisible="False"
                              HorizontalAlignment="Left" VerticalAlignment="Center"                               
                              Content="{TemplateBinding ComboBox.SelectionBoxItem}" 
                              ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                            <TextBox Name="PART_EditableTextBox"                 
                                IsReadOnly="{TemplateBinding IsReadOnly}"
                                Visibility="Hidden" Background="Transparent"
                                HorizontalAlignment="Center" VerticalAlignment="Center"
                                Focusable="True" >
                                <TextBox.Template>
                                    <ControlTemplate TargetType="TextBox" >
                                        <Border Name="PART_ContentHost" Focusable="False" />
                                    </ControlTemplate>
                                </TextBox.Template>
                            </TextBox>
                            <!-- Popup showing items -->
                            <Popup Name="Popup" Placement="Bottom"
                                 Focusable="False" AllowsTransparency="True"
                                 IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                                 PopupAnimation="Fade">
                                <Grid Name="DropDown" SnapsToDevicePixels="True"
                                     MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                                     MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
                                     >
                                    <Border Name="DropDownBorder" Background="Transparent" Margin="0, 1, 0, 0"
                                     CornerRadius="0" BorderThickness="1,1,1,1" 
                                     BorderBrush="{StaticResource ComboBoxNormalBorderBrush}"/>
                                    <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ItemsControl.HasItems" Value="False">
                                <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                            </Trigger>
                            <Trigger Property="ItemsControl.IsGrouping" Value="True">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                            </Trigger>
                            <Trigger Property="ComboBox.IsEditable" Value="True">
                                <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                                <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                                <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="355*"/>
            <ColumnDefinition Width="407*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="1*"></RowDefinition>
            <RowDefinition Height="4*"></RowDefinition>
            <RowDefinition Height="1*"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid Grid.Row="1" DataContext="{Binding OptionModel}" Grid.ColumnSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Label Grid.Column="0" Grid.Row="0" Content="Resolution" Style="{StaticResource LabelTemplate}"></Label>
                <Label Grid.Column="0" Grid.Row="1" Content="Left" Style="{StaticResource LabelTemplate}"></Label>
                <Label Grid.Column="0" Grid.Row="2" Content="Right" Style="{StaticResource LabelTemplate}"></Label>
                <Label Grid.Column="0" Grid.Row="3" Content="Pause" Style="{StaticResource LabelTemplate}"></Label>
                <Label Grid.Column="0" Grid.Row="4" Content="Fire" Style="{StaticResource LabelTemplate}"></Label>
                <TextBox x:Name="LeftMoveTextBox"  KeyUp="LeftMoveTextBox_KeyUp"  Grid.Column="1" Grid.Row="1" Style="{StaticResource TextBoxTemplate}" Text="{Binding LeftMove}"></TextBox>
                <TextBox x:Name="RightMoveTextBox"  KeyUp="RightMoveTextBox_KeyUp"  Grid.Column="1" Grid.Row="2" Style="{StaticResource TextBoxTemplate}" Text="{Binding RightMove}"></TextBox>
                <TextBox x:Name="PauseTextBox"  KeyUp="PauseTextBox_KeyUp"  Grid.Column="1" Grid.Row="3" Style="{StaticResource TextBoxTemplate}" Text="{Binding PauseButton}"></TextBox>
                <TextBox x:Name="FireTextBox"  KeyUp="FireTextBox_KeyUp"  Grid.Column="1" Grid.Row="4" Style="{StaticResource TextBoxTemplate}" Text="{Binding FireButton}"></TextBox>
                <ComboBox Grid.Column="1" Grid.Row="0" Style="{StaticResource ComboBoxFlatStyle}" SelectedValue="{Binding Resolution}" x:Name="ResolutionComboBox"></ComboBox>
            </Grid>
            <Grid Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*"></RowDefinition>
                    <RowDefinition Height="1*"></RowDefinition>
                    <RowDefinition Height="1*"></RowDefinition>
                    <RowDefinition Height="4*"></RowDefinition>
                </Grid.RowDefinitions>
                <CheckBox x:Name="MouseCheckBox" Grid.Column="0" Grid.Row="0" Style="{StaticResource CheckboxTemplate}" IsChecked="{Binding IsMouseEnabled}" Content="Mouse"></CheckBox>
                <CheckBox x:Name="KeyboardCheckBox" Grid.Column="0" Grid.Row="1" Style="{StaticResource CheckboxTemplate}" IsChecked="{Binding IsKeyboardEnabled}" Content="Keyboard"></CheckBox>
                <CheckBox x:Name="SoundCheckBox" Grid.Column="0" Grid.Row="2" Style="{StaticResource CheckboxTemplate}" IsChecked="{Binding IsSoundEnabled}" Content="Sound"></CheckBox>
                <Label x:Name="StatusLabel" Grid.Column="0" Grid.Row="4" Grid.ColumnSpan="2" Style="{StaticResource LabelTemplate}"></Label>
            </Grid>
        </Grid>
        <Grid Grid.Row="2" Grid.ColumnSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Button x:Name="ApplyButton" Grid.Column="1" Style="{StaticResource CustomButtonStyle}" Content="Apply" Click="ApplyButton_Click"></Button>
            <Button x:Name="BackToMainButton" Grid.Column="2" Style="{StaticResource CustomButtonStyle}" Content="Back" Click="BackToMainButton_Click"></Button>
        </Grid>
    </Grid>
</Window>
